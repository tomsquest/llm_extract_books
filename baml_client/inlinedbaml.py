###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {
    
    "book.baml": "class Book {\n  title string\n  series string?\n  authors string[]\n  rating int?\n  volume string? @description(\"format as x/y if possible\")\n  comment string?\n  date string? @description(\"format as yyyy-mm if possible\")\n  urls string[]\n  fiction bool\n}\n\nfunction ExtractBook(book_text: string) -> Book {\n  // client GeminiFlash\n  client ClaudeHaiku\n\n  prompt #\"\n    Your task is to extract structured information from the book and format it as JSON.\n\n    Book:\n    ---\n    {{ book_text }}\n    ---\n\n    {# special macro to print the output instructions. #}\n    {{ ctx.output_format }}\n\n    JSON:\n  \"#\n}\n\ntest Test_complete {\n  functions [ExtractBook]\n  args {\n    book_text #\"\n      Les feux de Cibola - The Expanse - Tome 4/7 - James S.A. Corey\n      Lu en avril 2024\n      4 sur 5\n      Je prends assez de plaisir à lire la suite de l'évolution du monde de The Expanse.\n      Le héros est un peu comme Harry Potter, mais ca passe.\n      [Roubaix](http://www.mediathequederoubaix.fr/ark:/245243523452)\n      [Amazon](https://www.amazon.fr/Quality-Land-Marc-Uwe-Kling/dp/13414321)\n    \"#\n  }\n}\n\ntest Test_mini {\n  functions [ExtractBook]\n  args {\n    book_text #\"\n      Garrett - Glen Cook\n    \"#\n  }\n}",
    "clients.baml": "retry_policy RetryTwice {\n  max_retries 2\n}\n\nclient<llm> GPT4 {\n  provider openai\n  retry_policy RetryTwice\n  options {\n    model gpt-4\n    api_key env.OPENAI_API_KEY\n    temperature 0\n  }\n}\n\nclient<llm> GPT4o {\n  provider openai\n  retry_policy RetryTwice\n  options {\n    model gpt-4o\n    api_key env.OPENAI_API_KEY\n    temperature 0\n  }\n}\n\nclient<llm> ClaudeHaiku {\n  provider anthropic\n  retry_policy RetryTwice\n  options {\n    model claude-3-haiku-20240307\n    api_key env.ANTHROPIC_API_KEY\n    max_tokens 1000\n    temperature 0\n  }\n}\n\nclient<llm> ClaudeSonnet {\n  provider anthropic\n  retry_policy RetryTwice\n  options {\n    model claude-3-5-sonnet-20240620\n    api_key env.ANTHROPIC_API_KEY\n    max_tokens 1000\n    temperature 0\n  }\n}\n\nclient<llm> GeminiFlash {\n  provider vertex-ai\n  retry_policy RetryTwice\n  options {\n    model gemini-1.5-flash-001\n    project_id env.GCP_PROJECT_ID\n    location env.GCP_PROJECT_LOCATION\n    credentials env.GCP_CREDENTIALS_FILE\n    generationConfig {\n      maxOutputTokens 1000\n      temperature 0\n    }\n  }\n}\n\nclient<llm> GeminiPro {\n  provider vertex-ai\n  retry_policy RetryTwice\n  options {\n    model gemini-1.5-pro-001\n    project_id env.GCP_PROJECT_ID\n    location env.GCP_PROJECT_LOCATION\n    credentials env.GCP_CREDENTIALS_FILE\n    generationConfig {\n      maxOutputTokens 1000\n      temperature 0\n    }\n  }\n}",
    "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\"\n    output_type \"python/pydantic\"\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"..\"\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.52.1\"\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    // Regardless of this setting, you can always explicitly call either of the following:\n    // - b.sync.FunctionName()\n    // - b.async_.FunctionName() (note the underscore to avoid a keyword conflict)\n    default_client_mode sync\n}",
}

def get_baml_files():
    return file_map